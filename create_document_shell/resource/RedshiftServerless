#!/bin/bash
# -----------------------------------------------------------------------------
# Redshift Serverless情報取得リソースファイル(Mac/Linux用)
# -----------------------------------------------------------------------------
# -----------------------------------------------------------------------------
# 【環境変数】
# OS_TYPE         ：OS種別
# OVERWRITE_OPTION：sedコマンドのオプション
# ITEMS           ：セクション数のカウント初期化処理
# ROW_COUNT       ：項目行の行数カウント初期化処理
# AWS_REGION      ：情報を取得するリージョンの指定【編集可】
#                   複数リージョンを取得する場合はカンマ（,）で区切る
# LIST_TMP        ：リージョンリスト作成用tmpファイル
# -----------------------------------------------------------------------------
OS_TYPE=$(uname -s)
if [ ${OS_TYPE} == "Darwin" ]; then
  OVERWRITE_OPTION=".tmp"
else
  OVERWRITE_OPTION=""
fi

ITEMS="0"
ROW_COUNT[${ITEMS}]="0"
AWS_REGION="ap-northeast-1"
LIST_TMP=.${RESOURCE_NAME}.tmp
echo ${AWS_REGION} | sed -e "s/ //g" -e "s/,/\n/g" >| ${LIST_TMP}

# -----------------------------------------------------------------------------
# ワークグループ
# -----------------------------------------------------------------------------
# タイトル【編集可】
echo "# Redshift Serverless" >| ${OUTPUT_PATH}

# リージョンごとの情報取得
while read REGION_LIST
do
  # リージョンごとの表題【編集可】
  echo "## ワークグループ (${REGION_LIST})" >> ${OUTPUT_PATH}
  echo "" >> ${OUTPUT_PATH}

  # 項目行の行数カウント処理
  ROW_COUNT[${ITEMS}]=$(wc -l ${OUTPUT_PATH} | awk '{print $1}')

  # リソースリスト取得【編集可】
  aws redshift-serverless list-workgroups --region ${REGION_LIST} | jq -r '.workgroups[] |
  [
    .workgroupName, # ワークグループ名
    .namespaceName, # 名前空間
    .baseCapacity,  # ベースRPU容量
    (.endpoint.vpcEndpoints[].vpcId // "-"), # VPCID
    (.endpoint.vpcEndpoints[].vpcEndpointId // "-"), # VPCエンドポイントID
    (.securityGroupIds | map(. // "-") | join("<br>")), # セキュリティグループ
    (.endpoint.vpcEndpoints[].networkInterfaces | map(.subnetId // "-") | join("<br>")), # サブネット
    .enhancedVpcRouting, # 拡張されたVPCのルーティング
    .publiclyAccessible # パブリックにアクセス可能
  ] | @tsv' | sort | sed -e "s/\t/|/g" -e "s/^/|/g" -e "s/$/|/g" -e "s/\"//g" >> ${OUTPUT_PATH}

  # 項目行とMarkdown形式の表の書式行追加【編集可】
  sed -i ${OVERWRITE_OPTION} -e "$((${ROW_COUNT[${ITEMS}]}+1))s/^/|ワークグループ名|名前空間|ベースRPU容量|VPC|VPCエンドポイントID|セキュリティグループ|サブネット|拡張されたVPCのルーティング|パブリックにアクセス可能|\n/" ${OUTPUT_PATH}
  sed -i ${OVERWRITE_OPTION} -e "$((${ROW_COUNT[${ITEMS}]}+2))s/^/|:--|:--|:--|:--|:--|:--|:--|:--|:--|\n/" ${OUTPUT_PATH}

  # 改行【編集可】
  echo "" >> ${OUTPUT_PATH}

# -----------------------------------------------------------------------------
# 名前空間
# -----------------------------------------------------------------------------
  # セクション数変数のインクリメント
  ITEMS=$((${ITEMS}+1))

  # リージョンごとの表題【編集可】
  echo "## 名前空間 (${REGION_LIST})" >> ${OUTPUT_PATH}
  echo "" >> ${OUTPUT_PATH}

  # 項目行の行数カウント処理
  ROW_COUNT[${ITEMS}]=$(wc -l ${OUTPUT_PATH} | awk '{print $1}')

  # リソースリスト取得【編集可】
  aws redshift-serverless list-namespaces --region ${REGION_LIST} | jq -r '.namespaces[] |
  [
    .namespaceName, # 名前空間
    .namespaceId, # 名前空間ID
    .adminUsername, # 管理者ユーザ名
    .dbName, # DB名
    .kmsKeyId, # KMSキーID
    (.logExports | map(. // "-") | join("<br>")) # エクスポートされたログ
  ] | @tsv' | sort | sed -e "s/\t/|/g" -e "s/^/|/g" -e "s/$/|/g" -e "s/\"//g" >> ${OUTPUT_PATH}

  # 項目行とMarkdown形式の表の書式行追加【編集可】
  sed -i ${OVERWRITE_OPTION} -e "$((${ROW_COUNT[${ITEMS}]}+1))s/^/|名前空間|名前空間ID|管理者ユーザ名|DB名|KMSキーID|エクスポートされたログ|\n/" ${OUTPUT_PATH}
  sed -i ${OVERWRITE_OPTION} -e "$((${ROW_COUNT[${ITEMS}]}+2))s/^/|:--|:--|:--|:--|:--|:--|\n/" ${OUTPUT_PATH}

  # 改行【編集可】
  echo "" >> ${OUTPUT_PATH}

  # CSVファイルへの変換処理
  if [ ${FILETYPE} == "csv" ]; then
    EXPORT_CSV ${ITEMS} ${OUTPUT_PATH}
  fi

done < ${LIST_TMP}

# 作業用tmpファイルの削除
rm -f ${LIST_TMP}

if [ ${OS_TYPE} == Darwin ]; then
  rm -f ${OUTPUT_PATH}${OVERWRITE_OPTION}
fi